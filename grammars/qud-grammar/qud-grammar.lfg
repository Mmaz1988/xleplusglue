DEMO   ENGLISH   CONFIG (1.0)
  ROOTCAT   ROOT.  "changed to ROOT from S"
  FILES common.templates.lfg  .
  LEXENTRIES   (DEMO ENGLISH).
  TEMPLATES (DEMO ENGLISH) (STANDARD COMMON).  "added common ParGram templates"
  RULES   (DEMO ENGLISH) .
  MORPHOLOGY (DEMO ENGLISH).
  GOVERNABLERELATIONS    SUBJ OBJ OBJ2 COMP XCOMP OBL OBL-?+.
  SEMANTICFUNCTIONS    ADJUNCT  TOPIC FOCUS POSS STANDARD.
  NONDISTRIBUTIVES   NUM PERS COORD-FORM.
  EPSILON   e.
  OPTIMALITYORDER NOGOOD  PPadj +PPattach +PPpassiv +sg-imp.
  GENOPTIMALITYORDER GenBadPunct NOGOOD +Punct.

----

DEMO ENGLISH MORPHOLOGY (1.0)

TOKENIZE:
P!tokenizers/basic-parse-tok.fst G!tokenizers/default-gen-tokenizer.fst

ANALYZE:
tokenizers/english.infl.patch.full.fst

----

DEMO   ENGLISH   RULES (1.0)

   ROOT --> "can have other things here as well, imperatives, etc."
 	  { S: (^ ROOT) = +;
 	    (PERIOD: @(OT-MARK Punct)) "prefer for generation"
 	  | Simp
 	  | Sint
 	  | DisCONJ
 	  }.

   DisCONJ --> Sint: (^ QUESTION) = !;
               SCONJ
               Sans.

   Sans --> e:  (^ ANSWER PRED) = (^ QUESTION PRED)
                (^ ANSWER) = (^ QUESTION)\PRON-INT\SUBJ;
            NP: (^ ANSWER SUBJ) = !.

  Simp --> e: (^ SUBJ PRED) = 'pro'
	       (^ SUBJ PERS) = 2;
 	  VP
 	  EXCL.  "obligatory exclamation mark"

   S --> NP: (^ SUBJ)=!
	     (! CASE)=nom;
 	 VP: (^ TNS-ASP TENSE) "require that sentences have tense"
 	     (^ FIN) = +
	     (s::^ TEMP-REF EVAL) = %eval. "Tense needs to be evaluated against sth."

Sint -->    PRONint: (^ PRON-INT) = !
                   {(^ SUBJ) = ! |
                    (^ OBJ) = !};
            (NP: (^ SUBJ) !)
             VP.

    VP --> (AUX) "auxiliary introduced for passive"
 	  V: ^=!;
 	  (NP: (^ OBJ)=! "direct object"
	       (! CASE)=acc)
 	  (NP: (^ OBJ2) = !)
	  "secondary object"
 	  PP*: { ! $ (^ ADJUNCT) "PPs can be all types of adjuncts"
		 (! PTYPE) =c sem "only semantic PPs here"
		 "@(OT-MARK PPadj)" "disprefer adjunct PPs"
	       | (^ OBL) = ! "or a a general oblique"
	       };
 	  (PP: (^ OBL-TO) = ! "special obl for ditransitives"
	       "example of a constraining equation: require a value with =c"
	       (! PFORM) =c to )
 	  (PP: (^ OBL-AG) = ! "oblique agent of passive"
	       "example of a constraining equation: require a value with =c"
	       (! PFORM) =c by
	       @(OT-MARK PPpassiv))
 	  ({ CP: (^ COMP) = !
 	  	|
 		VPinf: (^XCOMP) = !
 		 (! FIN) = -
		 (! VFORM) = inf
 		 (s::^ TEMP-REF) = (s::(^XCOMP) EVAL)}
 		 )
 (ADVP: ! $ (^ ADJUNCT)).

   ADVP --> VP: (^ SUBJ PRED) = 'pro'
   	    	~[(^ TNS-ASP TENSE)].

   CP -->  C
	   S.

   VPinf --> PARTinf VP.

   NP --> "either a full NP or a PRON"
 	  { (D: ^=!)
	    "optional determiner"
 	    AP*: ! $ (^ ADJUNCT); "introducing adjectives in sets"
 	     N: ^=!;
	    "head of NP"
 	    PP*: ! $ (^ ADJUNCT) "PPs modifying NPs"
		 (! PTYPE) =c sem "have to be semantic"
		 "@(OT-MARK PPattach)" "prefer PPs attached to NPs"
 	  | PRON}.

   AP --> ADV*: ! $ (^ ADJUNCT);
 	  A
 	  (COMMA).

   PP --> { P: ^ = ! "head of PP"
	       (! PTYPE) =c sem; "semantic type, Adjunct"
 	    NP: (^ OBJ) = !
		(! CASE) = acc
 	  | P: ^ = ! "head of PP"
	       (! PTYPE) =c nosem; "non-semantxic type, OBL"
 	    NP
 	  }.



  METARULEMACRO(_CAT _BASECAT _RHS) = "applies to all rules in the grammar"

    { "just use the rule as stated"
      "don't do anything to it; ALWAYS include this option"

      _RHS

     |"if it is an NP or an N, pass it to the NP
      coordination rule"
      "COM{EX RULE NP: the girl and the boy}"

      e: _CAT $c { NP N };
      @(NPCOORD _CAT)

     |"if it is any other category, pass it to
      the same category coordination rule"
      "COM{EX RULE S: the girl sleeps and walks.}"
      "COM{EX RULE PP: with the girl and in the park}"

      e: _CAT ~$ { NP N };
      @(SCCOORD _CAT)

     |"allow bracketing around any category"
      "COM{EX RULE S: [the girl] sleeps.}"
      "COM{EX RULE S: boys baked [the bananas in the cake].}"

      LB: @(OT-MARK GenBadPunct); "preceding quote mark"
                                  "disprefer in generation"
      _CAT: @PUSHUP; "this pushes the quotes to the top
                      to avoid vacuous ambiguity for things like:
                      COM{EX RULES NP: [cakes])"
      RB "following quote mark"}.

"Coordination rules"

NPCOORD(_CAT) = "coordination of nominals"
   "COM{EX RULE NP: girls and boys}"
   "This differs from SCCOORD in that the conjunction provides NUM pl to
   the resulting coordinated f-structure and the person features are
   resolved for the noun phrase."

   _CAT: @IN-SET  "first nominal"
         @NP-CONJUNCT; "calls person resolution template"

   CONJnp: @PUSHUP; "conjunction"
           "PUSHUP avoids vacuous ambiguity in constructions like:
            COM{EX RULES NP: girls and boys}"

   _CAT: @IN-SET "second nominal"
         @NP-CONJUNCT.

SCCOORD(_CAT) = "coordination of non-nominals"
  "COM{EX RULES PP: with girls and with boys}"
  "COM{EX RULES S: girls sleep and boys sleep.}"
  "no features other than a COORD-FORM are provided to the coordinated
  f-structure."

   _CAT: @IN-SET; "first constituent"
   (COMMA: @(OT-MARK GenBadPunct)) "optional comma;
                                    disprefered in generation"
                       "COM{EX RULES S: girls sleep, and boys sleep.}"

   CONJ: @PUSHUP; "conjunction"
         "PUSHUP avoids vacuous ambiguity in constructions like:
         COM{EX RULES S: boys walk and sleep.}"

   _CAT: @IN-SET "second constituent".

----
DEMO   ENGLISH   TEMPLATES (1.0)

   NP-CONJUNCT = "provides person resolution features for nominal
	  coordination"

	  { "if either conjunct is 1st person; the whole NP is"
	    "EX: the boys and me}"
	    (! PERS)=c 1
	    (^ PERS)=1
	   |"if a conjunct is 2nd person and the NP is not
	    already 1st person, make it 2nd person"
	    (! PERS)=c 2
	    { (^ PERS)=c 1 "one conjunct was 1st person"
	      "EX: you and I}"
	     |(^ PERS)=2 } "else assign 2nd person"
	    "EX: you and the boys}"
	   |"otherwise, the NP is 3rd person"
	    "EX: the boys and her}"
	    (^ PERS)=3}.

   OT-MARK(_mark) = "assigns an OT mark, from common templates"
	  _mark $ o::*.

   PASS(FRAME) = { FRAME "no passive, just give back subcat frame"
	    (^ PASSIVE) = - "no passive"
	  | FRAME "passive"
	    (^ PASSIVE) = + "mark as such"
	    (^ PARTICIPLE) =c past "make sure to have a past participle"
	    (^ OBJ)-->(^ SUBJ) "obj goes to subj"
	    { (^ SUBJ)-->(^ OBL-AG) "either make subj obl-ag"
	    | (^ SUBJ)--> NULL "or delete"
	    }
	  }.

   DAT-SHIFT(SCHEMATA) = { SCHEMATA
	    (^ DATIVE-SHIFT) = -
	  | SCHEMATA
	    (^ DATIVE-SHIFT) = +
	    (^ OBJ)-->(^ OBJ2)
	    (^ OBL-TO)-->(^ OBJ)}.

   """Subcategorization templates"""

   "lambda DRT"
   DITRANS(P) = @(PASS @(DAT-SHIFT (^ PRED)='P<(^ SUBJ) (^ OBJ) (^ OBL-TO)>')).


   "lambda DRT"
   TRANS(P) = @(PASS (^ PRED)='P<(^SUBJ) (^OBJ)>').





   "FOL + lambda calculus"
   OPT-TRANS(P) = { (^ PRED) = 'P<(^SUBJ)(^OBJ)>' "P is a variable"
	   	          | (^ PRED) = 'P<(^SUBJ)>'	}.  "this template takes one argument:  P"




   """Functional feature templates"""

   PRED(P) = (^ PRED) = 'P'.


   BARE-AGR = { (^VFORM) ~= inf
	    { (^ SUBJ NUM) = pl "either it is plural"
	    | (^ SUBJ PERS) ~= 3 "or singular and not 3rd person"
	      (^ SUBJ NUM) = sg
	      @(OT-MARK sg-imp) "prefer a singular imperative"
	    }
	  | (^VFORM) = inf}.

   S-AGR = (^ SUBJ PERS) = 3 "for verbs in -s"
	  (^ SUBJ NUM) = sg.

"template for ntypes, called NPOS here because of clash with common templates"

   NPOS(N) = (^ NTYPE) = N.





   DEF = (^ DEF).

----

DEMO ENGLISH LEXICON (1.0)

ensure    V-S XLE (^PRED) = '%stem<(^SUBJ)(^COMP)>'.


"Intransitives"

appear 	  V-S XLE @(INTRANS-EV %stem).

disappear V-S XLE @(INTRANS-EV %stem).

laugh 	  V-S XLE @(INTRANS-EV %stem).

sleep 	  V-S XLE @(INTRANS-EV %stem).

wait 	  V-S XLE { @(INTRANS-EV wait) |
		@(INTRANS-OBL wait)
		"this is the non-semantic OBL wait on a customer use"
		(^ OBL PFORM) =c on
		(^ PSEM) =c nosem }.

"Optional transitives"

drinks 	  V-S XLE @(OPT-TRANS-EV %stem).

ate 	  V * @(OPT-TRANS eat).

escape 	  V-S XLE @(OPT-TRANS-EV %stem).

"Transitives"

devour 	  V-S * @(TRANS-EV %stem).


"nouns"

cake N * (^PRED) = 'cake'.

dog N * (^PRED) = 'dog'.


"determiners"

the 	  D * (^DEF) = +.

a 	  D * @(SPEC-DET-PRED a)
	      (^ DEF) = - "this indefinite only marks singulars"
	      (^ NUM) = sg.


every 	  D * @(SPEC-DET-PRED every)
	      (^ DEF) = - "this indefinite only marks singulars"
	      (^ NUM) = sg.


Who      PRONint * (^ PRED) = 'pro'.

"complementizers"

that  C * (^COMP-FORM) = that.


"conjunctions"

and 	  CONJ * @(COORD-FORM %stem);
	  CONJnp * @(COORD-FORM %stem) @(NUM pl).

or 	  CONJ * @(COORD-FORM %stem);
	  CONJnp * @(COORD-FORM %stem) @(NUM pl).

&     SCONJ * .

"punctuation, now with some functional information"

. 	  PERIOD * (^ STMT-TYPE) = declarative.

, 	  COMMA * .

! 	  EXCL * (^ STMT-TYPE) = exclamation.


----



