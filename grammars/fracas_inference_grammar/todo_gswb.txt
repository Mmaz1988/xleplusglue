// This is done
{
//Liger
lam(S,lam(T,drs([],[rel(bounded,T,S)]))) : (137_s -o (138_s -o 136_t))
lam(M,lam(P,lam(S,merge(drs([Z],[]),merge(app(app(M,S),Z),app(P,Z)))))) : ((137_s -o (138_s -o 136_t)) -o ((5_s -o 5_t) -o (13_s -o 13_t)))
lam(T,lam(T2,drs([],[rel(before,T,T2)]))) : (13_s -o (14_s -o 13_t))
lam(T,lam(P,lam(S,merge(drs([R],[]),merge(app(app(T,R),S),app(P,R)))))) : ((13_s -o (14_s -o 13_t)) -o ((13_s -o 13_t) -o (14_s -o 14_t)))
//Grammar
lam(V,lam(X,lam(E,merge(app(V,E),drs([],[rel(arg1,E,X)]))))) : ((12_v -o 12_t) -o (9_e -o (12_v -o 12_t))) || noscope
lam(X,drs([],[pred(man,X)])) : (9_e -o 9_t)
lam(V,drs([],[pred(hug,V)])) : (12_v -o 12_t)
lam(V,lam(X,lam(E,merge(app(V,E),drs([],[rel(arg2,E,X)]))))) : ((12_v -o 12_t) -o (4_e -o (12_v -o 12_t))) || noscope
lam(P,lam(Q,drs([],[imp(merge(drs([X],[]),app(P,X)),app(Q,X))]))) : ((9_e -o 9_t) -o ((9_e -o 5_t) -o 5_t))
lam(P,lam(Q,merge(drs([X],[]),merge(app(P,X),app(Q,X))))) : ((4_e -o 4_t) -o ((4_e -o 5_t) -o 5_t))
lam(X,drs([],[pred(woman,X)])) : (4_e -o 4_t)
//tense closure should also be added by Liger
lam(P,merge(drs([T],[eq(T,now)]),app(P,T))) : ((14_s -o 14_t) -o 11_t)
//situation as modifier (should be added by Liger
lam(V,lam(S,lam(E,merge(drs([],[rel(partOf,E,S)]),app(V,E))))) : ((12_v -o 12_t) -o (5_s -o (12_v -o 12_t)))
//Existential closure -- if liger fails, we get plain event semantics
lam(V,merge(drs([E],[]),app(V,E))) : ((12_v -o 12_t) -o 5_t)
}

//Next step
{
//Grammar
kim : 14_e
past : ((2_s -o 16_t) -o 16_t)
sit : ((15_v -o 15_t) -o (2_s -o (15_v -o 15_t)))
event : ((15_v -o 15_t) -o 16_t)
think : (6_t -o (14_e -o (15_v -o 15_t)))
think_inj : ((6_t -o (14_e -o (15_v -o 15_t))) -o ((1_s -o 6_t) -o (14_e -o (15_v -o 15_t))))
appear : (7_v -o 7_t)
sit : ((7_v -o 7_t) -o (1_s -o (7_v -o 7_t)))
past : ((1_s -o 6_t) -o (1_s -o 6_t))
event : ((7_v -o 7_t) -o 6_t)
}