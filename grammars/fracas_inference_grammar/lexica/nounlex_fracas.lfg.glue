NOUN ENGLISH LEXICON (1.0)


"nouns"
"most names and nouns because they are now handled via the morphology"



"multiword nouns"

New` York N *   (^ PRED)='New` York'
                (^NUM)=sg
                (^NTYPE NSYN) = proper
                (^NTYPE NSEM PROPER) = location.



Nobel     NMod *  (^ PRED) = 'Nobel'
             	  (^ TYPE) = kind.

"nouns that can take an XCOMP" "eg. the right to appear"

right	  N * (^PRED) = 'right<(^XCOMP)>'
              "(^NUM) = pl  (^NTYPE)=count"; ETC.




"countries"


Swede      N * {@(PRED %stem) | (^ PRED) = 'P<>(^SUBJ)'}
                (^NUM) = sg
                (^NTYPE NSYN) = common
                (^NTYPE NSEM COMMON) = count
                 @(COUNT-NOUN-SEM %stem).

Scandinavian      N * {@(PRED %stem) | (^ PRED) = 'P<>(^SUBJ)'}
                (^NUM) = sg
                (^NTYPE NSYN) = common
                (^NTYPE NSEM COMMON) = count
                 @(COUNT-NOUN-SEM %stem);
                ETC.

Sweden     N *   @(PRED sweden)
                (^NUM) = sg
                (^NTYPE NSYN) = proper
                (^NTYPE NSEM PROPER) = location.

Portugal   N *   @(PRED portugal)
                (^NUM) = sg
                (^NTYPE NSYN) = proper
                (^NTYPE NSEM PROPER) = location.


European    N * {@(PRED %stem) | (^ PRED) = 'P<>(^SUBJ)'}
                (^NUM) = sg
                (^NTYPE NSYN) = common
                (^NTYPE NSEM COMMON) = count
                @(COUNT-NOUN-SEM %stem)
                ; ETC.

Europeans    N * @(PRED european)
                (^NUM) = pl
                (^PERS) = 3
                (^NTYPE NSYN) = common
                (^NTYPE NSEM COMMON) = count
                @(COUNT-NOUN-SEM %stem).

Europe     N *   @(PRED europe)
                (^NUM) = sg
                (^NTYPE NSYN) = proper
                (^NTYPE NSEM PROPER) = location
                 @(PROPER-NOUN-SEM %stem).

Scandinavia     N *   @(PRED scandinavia)
                (^NUM) = sg
                (^NTYPE NSYN) = proper
                (^NTYPE NSEM PROPER) = location
                 @(PROPER-NOUN-SEM %stem).


"hardcoded words"

people   N *    {@(PRED %stem) | (^ PRED) = '%stem<>(^SUBJ)'}
                (^NUM) = pl
                (^NTYPE NSYN) = common
                (^NTYPE NSEM COMMON) = count
                @(COUNT-NOUN-SEM %stem).

Dumbo 	  N * {@(PRED %stem) | (^ PRED) = '%stem<>(^SUBJ)'}
                          (^NUM) = sg
                          (^NTYPE NSYN) = proper
                          (^NTYPE NSEM PROPER) = name
                          @(PROPER-NOUN-SEM %stem).

Bill 	  N * {@(PRED %stem) | (^ PRED) = '%stem<>(^SUBJ)'}
              (^NUM) = sg
              (^GENDER) = masc
              (^NTYPE NSYN) = proper
              (^NTYPE NSEM PROPER) = name.

Kim 	  N * {@(PRED %stem) | (^ PRED) = '%stem<>(^SUBJ)'}
                          (^NUM) = sg
                          (^NTYPE NSYN) = proper
                          (^NTYPE NSEM PROPER) = name
                          @(PROPER-NOUN-SEM %stem).

Fido 	  N * {@(PRED %stem) | (^ PRED) = '%stem<>(^SUBJ)'}
                          (^NUM) = sg
                          (^NTYPE NSYN) = proper
                          (^NTYPE NSEM PROPER) = name
                          @(PROPER-NOUN-SEM %stem).

PC-6082   N *   {@(PRED %stem) | (^ PRED) = '%stem<>(^SUBJ)'}
                (^NUM) = sg
                (^NTYPE NSYN) = proper
                (^NTYPE NSEM COMMON) = count
                @(PROPER-NOUN-SEM %stem).

ITEL-XZ   N *   {@(PRED %stem) | (^ PRED) = '%stem<>(^SUBJ)'}
                (^NUM) = sg
                (^NTYPE NSYN) = proper
                (^NTYPE NSEM COMMON) = count
                @(PROPER-NOUN-SEM %stem).

ITEL-ZY   N *   {@(PRED %stem) | (^ PRED) = '%stem<>(^SUBJ)'}
                (^NUM) = sg
                (^NTYPE NSYN) = proper
                (^NTYPE NSEM COMMON) = count
                @(PROPER-NOUN-SEM %stem).

ITEL-ZX   N *   {@(PRED %stem) | (^ PRED) = '%stem<>(^SUBJ)'}
                (^NUM) = sg
                (^NTYPE NSYN) = proper
                (^NTYPE NSEM COMMON) = count
                @(PROPER-NOUN-SEM %stem).

MIPS 	  N *   {@(PRED %stem) | (^ PRED) = '%stem<>(^SUBJ)'}
                (^NUM) = pl
                (^NTYPE NSYN) = proper
                (^NTYPE NSEM COMMON) = count
                @(PROPER-NOUN-SEM %stem).

ITEL 	N *    {@(PRED %stem) | (^ PRED) = '%stem<>(^SUBJ)'}
                (^NUM) = sg
                (^NTYPE NSYN) = proper
                (^NTYPE NSEM COMMON) = count
                @(PROPER-NOUN-SEM %stem)
                ;
	    NMod *  (^ PRED) = 'ITEL'
	            (^ TYPE) = kind.

APCOM   N *     {@(PRED %stem) | (^ PRED) = '%stem<>(^SUBJ)'}
                (^NUM) = sg
                (^NTYPE NSYN) = proper
                (^NTYPE NSEM COMMON) = count
                @(PROPER-NOUN-SEM %stem)
                ;
        NMod *  (^ PRED) = 'APCOM'
        	            (^ TYPE) = kind.

Pavarotti   N * {@(PRED %stem) | (^ PRED) = '%stem<>(^SUBJ)'}
                (^NUM) = sg
                (^NTYPE NSYN) = proper
                (^NTYPE NSEM PROPER) = name
                @(PROPER-NOUN-SEM %stem).




----